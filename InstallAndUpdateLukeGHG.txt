Install and update lukeghg python package, sorvi
---------------------------------------
Contents
-------
0 Create python virtual environment
A Install 'lukeghg' python package
B Update  lukeghg
C GHG inventory to CRFReporter xml file: basic workflow
D Some other useful programs
E Version control

The instructions are for zsh shell in sorvi.
(Your default shell might be for example "tcsh").

0 Create python virtual environment
----------------------------

1. Create python virtual environment called 'lukeghg' in your home directory
(promt% denotes your terminal command line prompt).

prompt% /usr/bin/python3 -m venv lukeghg

2. Activate the virtual environment

prompt% source lukeghg/bin/activate
(lukeghg) prompt%

Note the '(lukeghg)' appearing in front of your command prompt.

3. Check you have the latest versions of setuptools and wheel 
(lukeghg) prompt% python3 -m pip install --upgrade setuptools wheel

A Install 'lukeghg' python package
---------------------------

1. Install lukeghg python package to the virtual environment
   
Clone lukeghg from GitHub for example to /data/shared/<user>
(lukeghg) prompt% cd /data/shared/<user>
(lukeghg) prompt% mkdir <GHGInventoryDirectory>
(lukeghg) prompt% cd <GHGInventoryDirectory>
(lukeghg) prompt% git clone https://github.com/jariperttunen/lukeghg.git

2. Create the wheel package for lukeghg and install it 

(lukeghg) prompt% cd <GHGInventoryDirectory>/lukeghg/lukeghg
(lukeghg) prompt% python3 setup.py sdist bdist_wheel
(lukeghg) prompt% python3 -m pip --proxy 10.88.2.10:8080 install --upgrade dist/lukeghg-1.0-py3-none-any.whl

B Update lukeghg
----------------

You need to update lukeghg whenever you edit the files there (e.g. run-ghg-master.sh).
Otherwise changes will not appear available in the virtual environment,

1. Remember to activate the virtual environment. 

prompt% source ~/lukeghg/bin/activate
(lukeghg) prompt%:

2. Update lukeghg

As with the first install recreate the wheel package, but now first remove
the lukeghg package and then upgrade lukeghg and its dependencies.

(lukeghg) prompt%: python3 setup.py sdist bdist_wheel
(lukeghg) prompt%: python3 -m pip uninstall lukeghg
(lukeghg) prompt%: python3 -m pip --proxy 10.88.2.10:8080 install --upgrade dist/lukeghg-1.0-py3-none-any.whl

C. GHG inventory to CRFReporter xml file: basic workflow
---------------------------------------------

"run-ghg-master.sh" is a script that sets directories and files
for the current ghg inventory and inserts inventory results to PartyProfile xml.

The "run-ghg-master.sh" is located in "<GHGInventoryDirectory>/lukeghg/lukeghg/lukeghg/bin"
directory. Edit the following command options:
-c Location of the GHG inventory files
-p Location of the empty (i.e. no inventory data) PartyProfile xml from CRFReporter
-x Location of the PartyProfile result file to be imported to CRFReporter
-n Location of the specific NIR files
-i Location of the Comment files
-y Inventory year (last year in CRFReporter)

Note the options -b, -k,-l and -m refer to ubiquitous configuration
files. They come with the lukeghg package. Thus after downloading
lukeghg from GitHub it is recommended to create "crf" and "PartyProfile"
directories in <GHGInventoryDirectory> and run the run-ghg-master.sh
in <GHGInventoryDirectory>.

When "run-ghg-master.sh" is edited for the current inventory
lukeghg must be updated for the virtual environment. 

The xml for CRFReporter can be produced as follows:

(lukeghg) prompt%: python3 -m lukeghg.utility.convertuf8 -f crf/'*.csv'
(lukeghg) prompt%: run-ghg-master.sh > Import.log 2> Error.log

The GHG inventory result files (csv files) seem to use different encoding systems,
convertuf8 converts them to utf8 (this is why they need to be copied with scp to crf directory first). 
The script run-ghg-master.sh will run few minutes at most. 
The '>' character redirects 'standard out' terminal output to Import.log file 
and '2>' redirects 'standard error' terminal output to Error.log file.

For EU529 there is similar run-eu529-ghg-master.sh script. Note EU529
concerns KPLULUCF files only (LULUCF files are not missing by accident).

Please note CRFReporter checks that the version number of the PartyProfile 
xml matches the CRFReporter version. Each CRFReporter update requires new
empty PartyProfile xml from CRFReporter.

D Some other useful programs
----------------------------
lukeghg package contains useful scripts for during the inventory checks 
and to generate some ubiquitous tables for NIR. Each one has -h (help) option
that should print self-explanatory explanation for each command line option.

ghg-todo.py: 
Compare two inventories and list missing time series and UIDs not found.
Also, this is a quick fix to help to bring together scenario predictions for
further analysis. Give all scenario result files for argument -f1 and let 
the -f2 be a listing that produces no files. 

lulucf-table-612.py:
kptable-appendix11b.py:
kptable-appendix11c.py:
Produce three ubiquitous tables for NIR directly from the inventory results.

E Version control
------------

Currently lukeghg is in GitHub. For smooth operation with Luke network
sample gitgonfig is available in Git directory. Edit email and your name and
install it as ".gitconfig" in your home directory.
